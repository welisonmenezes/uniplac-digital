{"version":3,"sources":["Redux/Reducers/UsersReducer.js","Utils/IsLoggedIn.js","Redux/Reducers/UserReducer.js","Redux/Reducers/index.js","Redux/Actions/ActionTypes.js","Redux/Store/index.js","Redux/Actions/UsersActions.js","Redux/Actions/UserActions.js","Components/Public/Shared/Navigation/Navigation.js","Components/Public/Home/Home.js","Components/Public/NotFound/NotFound.js","Components/Public/Login/Login.js","Components/Admin/Dashboard/Dashboard.js","Utils/PrivateRouter.js","App.js","index.js"],"names":["initialState","users","loadingUsers","errorUsers","IsLoggedIn","localStorage","getItem","isUserLoggedin","Reducers","combineReducers","usersState","state","action","type","payload","userState","Store","createStore","getUsers","value","getUsersSuccess","getUsersError","setUserLogginStatus","Navigation","props","handleLogout","removeItem","test","window","location","pathname","setState","redirect","className","this","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Component","connect","store","dispatch","bindActionCreators","Home","loadData","fetch","then","data","json","console","log","error","map","user","key","employee_name","NotFound","Login","handleChange","e","target","name","login","preventDefault","email","password","setItem","messageError","onSubmit","noValidate","placeholder","onChange","Dashboard","PrivateRouter","component","rest","render","from","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8aeeb294.chunk.js","sourcesContent":["import {\r\n    GET_USERS,\r\n    GET_USERS_SUCCESS,\r\n    GET_USERS_ERROR\r\n} from '../Actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loadingUsers: false,\r\n    errorUsers: null\r\n};\r\n\r\nexport const UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                loadingUsers: action.payload\r\n            };\r\n        case GET_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };\r\n            //state.data.push({id:Math.floor(Math.random() * 10),employee_name: 'welison'})\r\n            //return state;\r\n        case GET_USERS_ERROR:\r\n            return {\r\n                ...state,\r\n                errorUsers: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","export default function IsLoggedIn() {\r\n    return (localStorage.getItem('islogged'));\r\n}","import { IS_USER_LOGGEDIN } from '../Actions/ActionTypes';\r\n\r\n// utils/extras\r\nimport IsLoggedIn from '../../Utils/IsLoggedIn';\r\n\r\nconst initialState = {\r\n    isUserLoggedin: IsLoggedIn()\r\n};\r\n\r\nexport const UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_USER_LOGGEDIN:\r\n            return {\r\n                ...state,\r\n                isUserLoggedin: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { UsersReducer } from './UsersReducer';\r\nimport { UserReducer } from './UserReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const Reducers = combineReducers({\r\n  usersState: UsersReducer,\r\n  userState: UserReducer\r\n});","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR';\r\nexport const IS_USER_LOGGEDIN = 'IS_USER_LOGGEDIN';","import { createStore } from 'redux';\r\nimport { Reducers } from '../Reducers';\r\n\r\nexport const Store = createStore(Reducers);\r\n","import {\r\n    GET_USERS,\r\n    GET_USERS_SUCCESS,\r\n    GET_USERS_ERROR\r\n} from './ActionTypes';\r\n\r\nexport const getUsers = value => ({\r\n    type: GET_USERS,\r\n    payload: value\r\n});\r\n\r\nexport const getUsersSuccess = value => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: value\r\n});\r\n\r\nexport const getUsersError = value => ({\r\n    type: GET_USERS_ERROR,\r\n    payload: value\r\n});\r\n","import { IS_USER_LOGGEDIN } from '../Actions/ActionTypes';\r\n\r\nexport const setUserLogginStatus = value => ({\r\n    type: IS_USER_LOGGEDIN,\r\n    payload: value\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { setUserLogginStatus } from '../../../../Redux/Actions/UserActions';\r\n\r\nclass Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { redirect: false };\r\n    }\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem('islogged');\r\n        this.props.setUserLogginStatus(false);\r\n        if (/admin*/.test(window.location.pathname)) {\r\n            this.setState({redirect: true});\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                { (this.state.redirect) && <Redirect to=\"/admin\" /> }\r\n                <Link to=\"/\">\r\n                    <span className=\"navbar-brand\">Navbar</span>\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\">\r\n                                <span className=\"nav-link\">Home</span>\r\n                            </Link>\r\n                        </li>\r\n                        { (this.props.isUserLoggedin) && \r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/admin\">\r\n                                    <span className=\"nav-link\">Admin</span>\r\n                                </Link>\r\n                            </li>\r\n                        }\r\n                        { (true) && \r\n                            <li className=\"nav-item\" onClick={this.handleLogout}>\r\n                                <span className=\"nav-link\">Logout</span>\r\n                            </li>\r\n                        }\r\n                        { (!this.props.isUserLoggedin) && \r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\">\r\n                                    <span className=\"nav-link\">Login</span>\r\n                                </Link>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    isUserLoggedin: store.userState.isUserLoggedin\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    setUserLogginStatus\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { getUsers, getUsersSuccess, getUsersError } from '../../../Redux/Actions/UsersActions';\r\n\r\nimport Navigation from '../Shared/Navigation/Navigation';\r\n\r\nclass Home extends Component {\r\n\r\n  loadData = () => {\r\n    this.props.getUsers(true);\r\n    this.props.getUsersError(null);\r\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        this.props.getUsersSuccess(data);\r\n        this.props.getUsers(false);\r\n        console.log(data)\r\n      }, error => {\r\n        this.props.getUsersError('Error ao carregar');\r\n        this.props.getUsers(false);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { \r\n      users,\r\n      loadingUsers,\r\n      errorUsers\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"Home\">\r\n        <Navigation></Navigation>\r\n        <h1>Home</h1>\r\n        <hr />\r\n        <button onClick={() => this.loadData()}>Carregar Dados</button>\r\n        { (users) && users.map(user => {\r\n          return <p key={user.id}><b>Name: </b>{user.employee_name}</p>\r\n        }) }\r\n        { (loadingUsers) && <p>carregando</p> }\r\n        { (errorUsers) && <p>{errorUsers}</p> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  users: store.usersState.users,\r\n  loadingUsers: store.usersState.loadingUsers,\r\n  errorUsers: store.usersState.errorUsers\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    getUsers,\r\n    getUsersSuccess,\r\n    getUsersError\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\n\r\nimport Navigation from '../Shared/Navigation/Navigation';\r\n\r\nclass NotFound extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <Navigation></Navigation>\r\n        <h1>NotFound</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { setUserLogginStatus } from '../../../Redux/Actions/UserActions';\r\n\r\nimport Navigation from '../Shared/Navigation/Navigation';\r\n\r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      messageError: null,\r\n      redirect: false\r\n    };\r\n  }\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === 'test@email.com' && this.state.password === '123456') {\r\n        localStorage.setItem('islogged', true);\r\n        this.props.setUserLogginStatus(true);\r\n        this.setState({\r\n            redirect: false\r\n        });\r\n    } else {\r\n        this.setState({messageError: 'Email ou senha inválidos'});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <Navigation></Navigation>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-md-center\">\r\n            <div className=\"col-md-6\">\r\n              <h1>Login</h1>\r\n              { (this.state.redirect) && <Redirect to=\"/admin\" /> }\r\n              <form onSubmit={this.login} noValidate>\r\n                  <div className=\"form-group\">\r\n                      <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                      <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange} />\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                  { (this.state.messageError) && <p>{this.state.messageError}</p> }\r\n              </form>\r\n              <p>\r\n                <small>Para teste use: <b>email:</b> test@email.com e <b>senha:</b> 123456</small>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  isUserLoggedin: store.userState.isUserLoggedin\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({\r\n    setUserLogginStatus\r\n  }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\n\r\nimport Navigation from '../../Public/Shared/Navigation/Navigation';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <Navigation></Navigation>\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// utils/extras\r\nimport IsLoggedIn from './IsLoggedIn';\r\n\r\nconst PrivateRouter = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    { ...rest }\r\n    render={props =>\r\n      (IsLoggedIn()) ? (\r\n        <Component {...props}></Component>\r\n      ): (\r\n        <Redirect to={{pathname: '/login', state: {from: props.location}}}></Redirect>\r\n      )\r\n    }\r\n    />\r\n);\r\n\r\nexport default PrivateRouter;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// public components\nimport Home from './Components/Public/Home/Home';\nimport NotFound from './Components/Public/NotFound/NotFound';\nimport Login from './Components/Public/Login/Login';\n\n// admin components\nimport Dashboard from './Components/Admin/Dashboard/Dashboard';\n\n// utils/extras\nimport PrivateRouter from './Utils/PrivateRouter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path='/login' exact={true} component={Login} />\n            <PrivateRouter path='/admin' component={Dashboard} />\n            <Route path='*' component={NotFound} />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Store } from './Redux/Store';\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <BrowserRouter>\n      <App></App>\n    </ BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}